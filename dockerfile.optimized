# Multi-stage Dockerfile für FreePBX 17 + Asterisk 21 auf Debian 12
# Reduziert die finale Image-Größe erheblich

# ============================================================================
# STAGE 1: Build Stage - Kompiliert Asterisk und bereitet FreePBX vor
# ============================================================================
FROM debian:12 AS builder

ENV DEBIAN_FRONTEND=noninteractive
ENV ASTERISK_VERSION=21
ENV FREEPBX_BRANCH=release/17.0

# Build-Dependencies installieren
RUN apt-get update && apt-get install -y --no-install-recommends \
    ca-certificates lsb-release apt-transport-https software-properties-common curl gnupg2 wget git \
    build-essential libnewt-dev libssl-dev libncurses5-dev libsqlite3-dev \
    libjansson-dev libxml2-dev uuid-dev pkg-config libedit-dev \
    unixodbc-dev libasound2-dev libogg-dev libvorbis-dev libicu-dev libcurl4-openssl-dev \
    libical-dev libneon27-dev libsrtp2-dev libspandsp-dev \
    libssl3 libssl-dev openssl libcrypto++8 libcrypto++-dev \
    && rm -rf /var/lib/apt/lists/*

# Asterisk kompilieren
RUN cd /usr/src && \
    wget http://downloads.asterisk.org/pub/telephony/asterisk/asterisk-${ASTERISK_VERSION}-current.tar.gz && \
    tar xvf asterisk-${ASTERISK_VERSION}-current.tar.gz && \
    cd asterisk-${ASTERISK_VERSION}*/ && \
    contrib/scripts/get_mp3_source.sh && \
    ./configure --libdir=/usr/lib/asterisk --with-pjproject-bundled --with-jansson-bundled --with-ssl && \
    make menuselect.makeopts && \
    menuselect/menuselect --enable format_mp3 menuselect.makeopts && \
    menuselect/menuselect --enable res_crypto menuselect.makeopts && \
    make && make install && make samples && make config && ldconfig

# FreePBX Framework klonen
RUN cd /usr/src && \
    git clone -b ${FREEPBX_BRANCH} https://github.com/FreePBX/framework freepbx

# ============================================================================
# STAGE 2: Runtime Stage - Minimales Image für Production
# ============================================================================
FROM debian:12

ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=Europe/Berlin

# Ondrej PHP Repository hinzufügen
RUN apt-get update && apt-get install -y --no-install-recommends \
    ca-certificates lsb-release apt-transport-https software-properties-common curl gnupg2 \
    && curl -fsSL https://packages.sury.org/php/apt.gpg | gpg --dearmor -o /etc/apt/trusted.gpg.d/ondrej_php.gpg \
    && echo "deb https://packages.sury.org/php/ $(lsb_release -sc) main" > /etc/apt/sources.list.d/ondrej-php.list \
    && apt-get update

# Nur Runtime-Dependencies installieren (KEINE build-essential!)
RUN apt-get install -y --no-install-recommends \
    # Asterisk Runtime
    libnewt0.52 libssl3 libncurses5 libsqlite3-0 \
    libjansson4 libxml2 uuid-runtime libedit2 \
    unixodbc libasound2 libogg0 libvorbis0a libicu72 libcurl4 \
    libical3 libneon27 libsrtp2-1 libspandsp2 \
    # Database
    mariadb-server mariadb-client \
    # PHP & Web Server
    php8.2 php8.2-cli php8.2-fpm php8.2-mysql php8.2-curl php8.2-mbstring \
    php8.2-xml php8.2-gd php8.2-intl php8.2-bcmath php8.2-zip php-pear \
    nginx supervisor \
    # Audio Tools (minimal)
    sox lame mpg123 \
    # Basic utilities
    git curl wget \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Asterisk von Builder Stage kopieren
COPY --from=builder /usr/sbin/asterisk /usr/sbin/asterisk
COPY --from=builder /usr/lib/asterisk /usr/lib/asterisk
COPY --from=builder /var/lib/asterisk /var/lib/asterisk
COPY --from=builder /etc/asterisk /etc/asterisk
COPY --from=builder /usr/src/freepbx /usr/src/freepbx

# Asterisk Benutzer & Rechte setzen
RUN groupadd -r asterisk && useradd -r -d /var/lib/asterisk -g asterisk asterisk && \
    usermod -aG audio,dialout asterisk && \
    mkdir -p /var/{lib,spool,log}/asterisk && \
    chown -R asterisk:asterisk /var/lib/asterisk /var/spool/asterisk /var/log/asterisk /etc/asterisk

# Nginx konfigurieren
COPY freepbx-nginx.conf /etc/nginx/sites-available/freepbx.conf
RUN ln -s /etc/nginx/sites-available/freepbx.conf /etc/nginx/sites-enabled/freepbx.conf && \
    rm -f /etc/nginx/sites-enabled/default

# PHP-FPM Konfiguration
RUN sed -i 's/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/' /etc/php/8.2/fpm/php.ini && \
    sed -i 's/memory_limit = .*/memory_limit = 256M/' /etc/php/8.2/fpm/php.ini && \
    sed -i 's/upload_max_filesize = .*/upload_max_filesize = 20M/' /etc/php/8.2/fpm/php.ini && \
    sed -i 's/post_max_size = .*/post_max_size = 20M/' /etc/php/8.2/fpm/php.ini

# Entrypoint & Supervisor
COPY entrypoint.sh /entrypoint.sh
COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf
RUN chmod +x /entrypoint.sh

# Cleanup - remove unnecessary files
RUN find /var/lib/asterisk -name "*.sample" -delete && \
    find /etc/asterisk -name "*.sample" -delete && \
    rm -rf /tmp/* /var/tmp/*

EXPOSE 80 443 5060/udp 5061/udp 10000-20000/udp
VOLUME [ "/var/lib/asterisk", "/var/spool/asterisk", "/var/log/asterisk", "/etc/asterisk", "/var/www/html", "/var/lib/mysql" ]

ENTRYPOINT ["/entrypoint.sh"]
CMD ["/usr/bin/supervisord", "-n", "-c", "/etc/supervisor/conf.d/supervisord.conf"]