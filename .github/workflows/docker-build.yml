name: Build and Push FreePBX Docker Image

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64

    - name: Generate deployment artifacts
      if: github.event_name != 'pull_request'
      run: |
        mkdir -p artifacts
        # Copy docker-compose template for deployment
        envsubst < docker-compose.yml > artifacts/docker-compose.yml
        # Create deployment script
        cat > artifacts/deploy.sh << 'EOF'
        #!/bin/bash
        set -e
        echo "Deploying FreePBX..."
        
        # Pull latest image
        docker compose pull
        
        # Restart services
        docker compose down
        docker compose up -d
        
        # Wait for services to be ready
        echo "Waiting for FreePBX to be ready..."
        timeout 300 bash -c 'until curl -f http://localhost:8080 >/dev/null 2>&1; do sleep 5; done'
        
        echo "FreePBX deployment complete!"
        echo "Access web interface at: http://localhost:8080"
        EOF
        chmod +x artifacts/deploy.sh

    - name: Upload deployment artifacts
      if: github.event_name != 'pull_request'
      uses: actions/upload-artifact@v4
      with:
        name: deployment-artifacts
        path: artifacts/

  security-scan:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    needs: build
    permissions:
      contents: read
      security-events: write

    steps:
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results.sarif'